<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
>

<style>
      .swiper-button-prev, .swiper-button-next { color: black; top: auto !important; height: 90px; }
      .swiper-button-prev::after, .swiper-button-next::after { font-size: 25px; }
      .swiper-pagination { color: black; bottom: 0 !important; }
      .swiper-pagination-bullet-active { background: black !important; }
      .product--information { height: fit-content; }


      #custom-button {
      background-color: #423937 !important; /* Custom background color */
      color: white !important; /* Text color */


       }
       #custom-button:hover {
      background-color: black !important; /* Custom background color on hover */
  }

  .product--information{
      height: fit-content;
  }
   /* modal style */
   .modal {
    display: none; /* Hide the modal by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
  }

  .modal-content {
    background-color: #fefefe;
    margin: 15% auto; /* 15% from the top and centered */
    padding: 20px;
    border: 1px solid #888;
    width: 80%; /* Could be more or less, depending on screen size */
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }
</style>

{% comment %}

   <style>
      .swiper-container { position: relative; }
      .swiper-button-prev, .swiper-button-next  {
          color: black;
          top: auto !important;
          /* height: 20px; */
          position: absolute;
          bottom: 40%;      /* Adjust as needed */
      }
      .swiper-button-prev::after, .swiper-button-next::after { font-size: 30px; }
      .swiper-pagination { color: black; bottom: 0 !important;  }
      .swiper-pagination-bullet-active { background: black !important; }
      .product--information { height: fit-content; }
  </style>
{% endcomment %}

<div id="modal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <p>Product added to cart!</p>
  </div>
</div>

<div class="max-w-6xl mx-auto my-8">
  {% comment %} <div class="grid grid-cols-1  md:grid-cols-2  lg:grid-cols-2 xl:grid-cols-2 gap-3"> {% endcomment %}
  <div class=" md:grid md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-2 gap-3">
    <div class="product--medias">
      <div class="hidden md:block lg:block xl:block">
        {% for media in product.media %}
          <div class="h-80 overflow-hidden p-2">
            {% render 'product-media', media: media %}
          </div>
        {% endfor %}
      </div>

      <div class="md:hidden lg:hidden ">
        <div class="swiper h-94 sm:mb-5">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-[100vw] overflow-hidden p-2">
                  {% render 'product-media', media: media %}
                </div>
              </div>
            {% endfor %}
          </div>
        </div>
        <div class="swiper-pagination"></div>

        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </div>
    <div class="product--information mt-20 md:mt-0 px-4 sticky top-5 ">
      {% assign product_price = product.selected_or_first_available_variant %}
      {% form 'product', product %}
        <input type="hidden" name="id" value="{{ product_price.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <div class="my-3">
                <span class="text-sm text-gray-500">{{ product.vendor }}</span>
              </div>

            {% when 'title' %}
              <div class="my-3">
                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
              </div>
            {% when 'price' %}
              <div class="my-3">
                <span class="text-base text-gray-500 line-through">{{ product_price.compare_at_price | money }}</span>
                <span class="text-lg text-gray-900">{{ product_price.price | money }}</span>
                {% if product_price.price < product_price.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">sale</span>
                {% endif %}
              </div>
            {% when 'variant_selector' %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <div data-url="{{ product.url }}" data-section="{{ section.id }}">
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                      <div class="my-2">
                        <select
                          name="options[{{ option.name }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border py-1 px-3"
                        >
                          {% for value in option.values %}
                            <option
                              value="{{ value |  escape }}"
                              {% if option.selected_value == value %}
                                selected="selected"
                              {% endif %}
                            >
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                    {% endfor %}
                  </div>
                {% endunless %}
              </div>
            {% when 'quantity' %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>
                <div class="my-2">
                  <input
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    min="1"
                    class="w-full border px-3 py-3 "
                  >
                </div>
              </div>
            {% when 'description' %}
              <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
              </div>
            {% when 'checkout_buttons' %}
              <div class="my-3">
                <button
                  id="custom-button"
                  type="submit"
                  name="add"
                  class="w-full px-6 py-4  rounded-md my-2"
                  {% if product_price.available == false %}
                    disabled
                  {% endif %}
                >
                  {% if product_price == false %}
                    Sold Out
                  {% else %}
                    Add To Cart
                  {% endif %}
                </button>
              </div>

            {% else %}

          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script>
  const swiper = new Swiper('.swiper', {
      direction: 'horizontal',
      pagination: {
          el: '.swiper-pagination',
      },
      navigation: {
          prevEl: '.swiper-button-prev', // Previous button class
          nextEl: '.swiper-button-next', // Next button class
      },
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const addToCartButton = document.getElementById('custom-button');
    const form = document.querySelector('form[action="/cart/add"]');
    const modal = document.getElementById('modal');
    const closeBtn = document.getElementsByClassName('close')[0];

    addToCartButton.addEventListener('click', function(event) {
      event.preventDefault(); // Prevent default form submission

      // Serialize form data
      const formData = new FormData(form);
      const data = {};
      formData.forEach((value, key) => {
        data[key] = value;
      });

      // Send form data via AJAX
      fetch('/cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        },
        body: JSON.stringify(data)
      })
      .then(response => response.json())
      .then(data => {
        // Handle response data as needed
        //console.log(data); // Log the response for example

        // Show modal if product added successfully
        modal.style.display = 'block';
      })
      .catch(error => {
        console.error('Error:', error);
      });
    });

    // Close modal when close button is clicked
    closeBtn.onclick = function() {
      modal.style.display = 'none';
    }

    // Close modal when user clicks outside of the modal
    window.onclick = function(event) {
      if (event.target == modal) {
        modal.style.display = 'none';
      }
    }
  });
</script>

<script>
  const query = `{
    products(first: 100) {
      edges {
        node {
          id
          vendor
        }
      }
    }
  }`;

  function apiCall(query) { 
    return fetch('https://firstdawn-theme.myshopify.com/api/graphql.json', {
      method: 'POST', 
      headers: { 
        'Content-Type': 'application/graphql', 
        'X-Shopify-Storefront-Access-Token': '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' 
      },
      body: query
    })
    .then(response => response.json()); 
  } 

  apiCall(query).then(response => { 
    console.log(response); 
  });
</script>

{% schema %}
{
    "name": "Product",
    "blocks": [
        {
            "type": "vendor",
            "name": "Vendor",
            "limit": 1
        },
        {
            "type": "title",
            "name": "Title",
            "limit": 1
        },
        {
            "type": "price",
            "name": "Price",
            "limit": 1
        },
        {
            "type": "variant_selector",
            "name": "Variant Selector",
            "limit": 1
        },
        {
            "type": "quantity",
            "name": "Quantity",
            "limit": 1
        },
        {
            "type": "description",
            "name": "Description",
            "limit": 1
        },
        {
            "type": "checkout_buttons",
            "name": "Checkout Buttons",
            "limit": 1
        }
    ]
}
{% endschema %}
